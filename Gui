import sys
from tkinter import *
from PIL import Image, ImageTk
import winsound


gameWindow = Tk()
mainPage = False
infoPage = True

def sound():    
    winsound.PlaySound("SystemExit", winsound.SND_ALIAS)

def openImage(filename):
    image = Image.open(filename)
    tkImage = ImageTk.PhotoImage(image)
    return tkImage

def getText(textFile):        
        try:
            f = open(textFile, "r")
            text = f.read()
            return text
        
        finally:
            f.close()

def setinfoPage():
    mainPage = False
    infoPage = True
    
    
menuBackGround = openImage('shop.gif')
infoBackGround = openImage('wolf.jpg')
startB = openImage('startfinal1.png')
infoB = openImage('informationfinal1.png')
exitB = openImage('exitfinal1.png')
backIcon = openImage('new.png')
forwardIcon = openImage('forward.png')
class Gui1():
    ''' class for all graphical objects with functions for creating each of them'''
    def __init__(self, root):
        self.root = root
        self.root.title("Game Shop")
        
        self.frame = Frame(self.root)
        self.frame.pack()
        
        self.canvas = Canvas(self.frame, width = 1024, height = 768, bg = "white")
        self.canvas.pack()
        self.canvas.create_image(1024/2,768/2,image = menuBackGround)
        
        self.button1 = Button(None, text = None, image = startB, command = sound,cursor = 'hand2')
        self.button2 = Button(None, text = None, image = infoB, command = setinfoPage, cursor = 'hand2')
        self.button3 = Button(None, text = None, image = exitB, command = gameWindow.destroy, cursor = 'hand2')

        self.canvas.create_window(512, 500, height = 57, width = 292, window = self.button1)
        self.canvas.create_window(512, 575, height = 57, width = 292, window = self.button2)
        self.canvas.create_window(512, 650, height = 57, width = 292, window = self.button3)

    def destroy():
        self.frame.destroy()

class Gui2():
    def __init__(self, root):
        self.root = root
        self.root.title("Game Shop")

        self.frame = Frame(self.root)
        self.frame.pack()
        
        self.canvas = Canvas(self.frame, width = 1024, height = 768, bg = "white")
        self.canvas.pack()
        self.canvas.create_image(1024/2,768/2,image = infoBackGround)
        
        self.canvas.create_text(512, 100, fill = 'pink', font = ("fixedsys", 32, "bold"), text = "INFORMATION" )
        self.canvas.create_text(512, 450, fill = 'pink', font = ("fixedsys", 18), text = getText('text7.txt') )
    
        self.pageCount = 0
        self.buttonBack = Button(None, text = None, image = backIcon, command = lambda : goBack(self.pageCount), cursor = 'hand2', state = DISABLED)
        self.canvas.create_window(120, 450, height = 35, width = 35, window = self.buttonBack)
        self.buttonForward = Button(None, text = None, image = forwardIcon, command = lambda : goForward(self.pageCount), cursor = 'hand2', state = NORMAL)
        self.canvas.create_window(900, 450, height = 35, width = 35, window = self.buttonForward)
        changeableText = self.canvas.create_text(512, 295, fill = 'pink', font = ("fixedsys", 18), text = getText('text1.txt'))

        self.button1 = Button(None, text = None, image = startB, command = sound, cursor = 'hand2')
        self.button3 = Button(None, text = None, image = exitB, command = gameWindow.destroy, cursor = 'hand2')
        self.canvas.create_window(512, 615, height = 57, width = 292, window = self.button1)
        self.canvas.create_window(512, 685, height = 57, width = 292, window = self.button3)
                                                      
        def goForward(page):
            print(self.pageCount)
            self.pageCount = self.pageCount + 1
            if page == 1:
                txt = getText('text2.txt')
                self.canvas.itemconfigure(changeableText, text = txt)
            elif page == 2:
                txt = getText('text3.txt')
                self.canvas.itemconfigure(changeableText, text = txt)
            elif page == 3:
                txt = getText('text4.txt')
                self.canvas.itemconfigure(changeableText, text = txt)
            elif page == 4:
                txt = getText('text5.txt')
                self.canvas.itemconfigure(changeableText, text = txt)
            elif page == 5:
                txt = getText('text6.txt')
                self.canvas.itemconfigure(changeableText, text = txt)
                
            if  page >0:
                self.buttonBack.config(state = NORMAL)
            else:
                self.buttonBack.config(state = DISABLED)
                
            if page < 5:
                self.buttonForward.config(state = NORMAL)
            else:
                self.buttonForward.config(state = DISABLED)

            
        def goBack(page):
            print(self.pageCount)
            self.pageCount = self.pageCount - 1
            if page == 0:
                txt = getText('text1.txt')
                self.canvas.itemconfigure(changeableText, text = txt)
            elif page == 1:
                txt = getText('text2.txt')
                self.canvas.itemconfigure(changeableText, text = txt)
            elif page == 2:
                txt = getText('text3.txt')
                self.canvas.itemconfigure(changeableText, text = txt)
            elif page == 3:
                txt = getText('text4.txt')
                self.canvas.itemconfigure(changeableText, text = txt)
            elif page == 4:
                txt = getText('text5.txt')
                self.canvas.itemconfigure(changeableText, text = txt)

            if page > 0 :
                self.buttonBack.config(state = NORMAL)
            else:
                self.buttonBack.config(state = DISABLED)
                
            if page < 5:
                self.buttonForward.config(state = NORMAL)
            else:
                self.buttonForward.config(state = DISABLED)
            
   
        

if mainPage == True:
    gui = Gui1(gameWindow)
elif infoPage == True:
    gui = Gui2(gameWindow)



print(infoPage)
print('DONE')
gameWindow.mainloop()
