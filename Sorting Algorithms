#three fastest sorting algorithms
#need to test them and create their versions for decreasing order
#SHELL SORT ALGORITHM

def shellSort(items):
    inc = len(items) / 2
    while inc:
        for i in xrange(len(items)):
            j = i
            temp = items[i]
            while j >= inc and items[j-inc] > temp:
                items[j] = items[j - inc]
                j -= inc
            items[j] = temp
        inc = inc/2 if inc/2 else (0 if inc==1 else 1)
        
#QUICK SORT ALGORITHM

def qsort3(arr, l, r):  
    def swap(arr, s, d):  
        if s != d:  
            tmp = arr[s]  
            arr[s] = arr[d]  
            arr[d] = tmp  
    if l >= r:  
        return      
    m = l  
    for i in range(l, r):  
        if arr[i] <= arr[r]:  
            swap(arr, i, m)  
            m += 1  
    swap(arr, m, r)  
    qsort3(arr, l, m-1)  
    qsort3(arr, m+1, r)  
    return arr 
    
#MERGE SORT ALGORITHM

def mergesort(arr):  
    if len(arr) == 1:  
        return arr  
      
    m = len(arr) / 2  
    l = mergesort(arr[:m])  
    r = mergesort(arr[m:])  
  
    if not len(l) or not len(r):  
        return l or r  
          
    result = []  
    i = j = 0  
    while (len(result) < len(r)+len(l)):          
        if l[i] < r[j]:  
            result.append(l[i])  
            i += 1  
        else:  
            result.append(r[j])  
            j += 1              
        if i == len(l) or j == len(r):              
            result.extend(l[i:] or r[j:])  
            break  
          
    return result
